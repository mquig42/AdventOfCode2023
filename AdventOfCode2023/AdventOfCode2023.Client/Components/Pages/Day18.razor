@page "/Day18"
@rendermode InteractiveWebAssembly

<PageTitle>Day 18</PageTitle>

@* <style>
    body {
        background-image: url(/media/background16.png);
        color: darkblue;
    }
</style> *@

<h2>Day 18</h2>

<div style="display:table-cell">
    <textarea cols="80" rows="25" @bind="puzzleInput" />
    <div align="right"><button @onclick="Run">Run</button></div>
</div>

<hr />
<h3>Part 1:</h3>
<p>@output1</p>

<hr />
<h3>Part 2:</h3>
<p>@output2</p>

<hr />
<h3>Notes</h3>

@code
{
    int output1 = 0;
    int output2 = 0;
    string puzzleInput = "";

    void Run()
    {
        string[] lines = puzzleInput.Trim().Split('\n');
        output1 = Solve1(lines);
    }

    //This is wrong. Find a better math reference.
    int Solve1(string[] lines)
    {
        int area = 0;
        int perimeter = 0;
        char dir;
        int length;
        (int x, int y) pos = (0, 0);
        (int x, int y) newPos;

        foreach(string line in lines)
        {
            dir = line[0];
            length = int.Parse(line.Split(" ")[1]);

            switch (dir)
            {
                case 'U':
                    newPos = (pos.x, pos.y - length);
                    break;
                case 'D':
                    newPos = (pos.x, pos.y + length);
                    break;
                case 'L':
                    newPos = (pos.x - length, pos.y);
                    break;
                default:
                    newPos = (pos.x + length, pos.y);
                    break;
            }

            area += (pos.x + newPos.x) * (pos.y - newPos.y);
            perimeter += length;
            pos = newPos;
        }

        return (Math.Abs(area) + perimeter) / 2 + 1;
    }
}
